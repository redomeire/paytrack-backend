services:
  # PHP Service - ini adalah jantung aplikasi Laravel kita
  php:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: laravel_php
    restart: unless-stopped
    working_dir: /var/www/html

    # Mount PHP config aja, JANGAN timpa source code
    volumes:
      - ./docker/php/php.ini:/usr/local/etc/php/conf.d/99-custom.ini

    networks:
      - laravel_network

    depends_on:
      - mysql
      - redis

  # Nginx Service - web server dan reverse proxy
  nginx:
    image: nginx:alpine
    container_name: laravel_nginx
    restart: unless-stopped

    ports:
      - "8080:80" # bisa diganti ke 80:80 kalau mau akses tanpa :8080

    volumes:
      # Jangan timpa source code, cukup mount config
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf

    networks:
      - laravel_network

    depends_on:
      - php

  # MySQL Service - database server
  mysql:
    image: mysql:8.0
    container_name: laravel_mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: laravel_db
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_USER: laravel_user
      MYSQL_PASSWORD: laravel_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - laravel_network
    command: --default-authentication-plugin=mysql_native_password

  # Redis Service - untuk caching dan session storage
  redis:
    image: redis:7-alpine
    container_name: laravel_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - laravel_network
    command: redis-server --appendonly yes

# Networks definition
networks:
  laravel_network:
    driver: bridge

# Volumes definition
volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
