# Definisikan upstream untuk PHP-FPM
# "php" di sini merujuk ke nama service di docker-compose.yml
upstream php-fpm {
    server php:9000;
}

server {
    # Listen di port 80 untuk HTTP requests
    listen 80;
    server_name localhost;

    # Document root mengarah ke direktori public Laravel
    # Ini adalah best practice Laravel - semua requests harus melalui public/
    root /var/www/html/public;
    index index.php index.html;

    # Security headers untuk melindungi aplikasi dari common attacks
    # X-Frame-Options mencegah clickjacking
    add_header X-Frame-Options "SAMEORIGIN" always;
    # X-Content-Type-Options mencegah MIME type sniffing
    add_header X-Content-Type-Options "nosniff" always;
    # X-XSS-Protection mengaktifkan XSS filtering di browser
    add_header X-XSS-Protection "1; mode=block" always;
    # Referrer-Policy mengontrol informasi referrer yang dikirim
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    # Content-Security-Policy membantu mencegah XSS attacks
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

    # Konfigurasi Gzip compression untuk mengurangi bandwidth usage
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied expired no-cache no-store private no_last_modified no_etag auth;
    gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml+rss;

    # Location block utama untuk handling Laravel routes
    # try_files sangat penting di sini - dia mencari file secara urutan
    # Jika file tidak ditemukan, request diteruskan ke index.php
    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    # Location block khusus untuk file PHP
    # Di sinilah magic terjadi - Nginx berkomunikasi dengan PHP-FPM
    location ~ \.php$ {
        # Teruskan request ke upstream PHP-FPM yang sudah kita definisikan
        fastcgi_pass php-fpm;
        fastcgi_index index.php;

        # SCRIPT_FILENAME harus tepat agar PHP bisa menemukan file yang benar
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;

        # Include parameter FastCGI standard
        include fastcgi_params;

        # Timeout settings untuk request yang membutuhkan waktu lama
        fastcgi_read_timeout 300;
        fastcgi_send_timeout 300;
        fastcgi_connect_timeout 300;
    }

    # Blokir akses ke hidden files (.env, .git, dll)
    # Ini sangat penting untuk keamanan
    location ~ /\. {
        deny all;
    }

    # Optimisasi untuk static assets
    # Browser akan cache file ini selama 1 tahun
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|pdf|txt|tar|woff|svg|ttf|eot|woff2)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        try_files $uri =404;
    }

    # Optimisasi untuk favicon dan robots.txt
    # Tidak perlu log setiap request ke file ini
    location = /favicon.ico { access_log off; log_not_found off; }
    location = /robots.txt  { access_log off; log_not_found off; }

    # Mencegah akses langsung ke direktori storage
    # Ini adalah security measure yang penting
    location ^~ /storage {
        deny all;
    }

    # Logging configuration
    error_log  /var/log/nginx/error.log;
    access_log /var/log/nginx/access.log;
}